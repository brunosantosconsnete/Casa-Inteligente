esphome:
  name: central-bruno
  friendly_name: Central_Bruno

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key
  services:
    - service: send_raw_command
      variables:
        command: int[]
      then:
        - remote_transmitter.transmit_raw:
            code: !lambda 'return command;'

    - service: send_pronto_command
      variables:
        data: string
      then:
        - remote_transmitter.transmit_pronto:
            data: !lambda 'return data;'

    - service: send_lg_command
      variables:
        my_data: int
        my_nbits: int
      then:
       - remote_transmitter.transmit_lg:
          data: !lambda 'return my_data;'
          nbits: !lambda 'return my_nbits;'

    - service: send_sony_command
      variables:
        my_data: int
        my_nbits: int
      then:
       - remote_transmitter.transmit_sony:
          data: !lambda 'return my_data;'
          nbits: !lambda 'return my_nbits;'
          repeat: 3

    - service: send_nec_command
      variables:
        my_address: int
        my_command: int
        my_command_repeats: int
      then:
       - remote_transmitter.transmit_nec:
          address: !lambda 'return my_address;'
          command: !lambda 'return my_command;'
          command_repeats: !lambda 'return my_command_repeats;'

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  networks:
  -  ssid: !secret wifi_ssid
     password: !secret wifi_password
  -  ssid: !secret wifi2_ssid
     password: !secret wifi2_password
  manual_ip:
    static_ip: 192.168.16.106
    gateway: 192.168.16.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Central-Bruno Fallback Hotspot"
    password: "cmMtbYUVjOh4"


web_server:
  port: 80
  css_url: ""
  #js_url: https://esphome.io/_static/v2/www.js
  version: 2

captive_portal:

output:
  - platform: gpio
    id: lamp_1
    pin: GPIO16 

  - platform: gpio
    id: lamp_2
    pin: GPIO14

  - platform: gpio
    id: lamp_3
    pin: GPIO12 

  - platform: gpio
    id: lamp_4
    pin: GPIO13           

light:
  - platform: binary
    output: lamp_1
    id: lmp_1
    name: "Lampada 1"

  - platform: binary
    output: lamp_2
    id: lmp_2
    name: "Lampada 2"

  - platform: binary
    output: lamp_3
    id: lmp_3
    name: "Lampada 3"

  - platform: binary
    output: lamp_4
    id: lmp_4
    name: "Lampada 4"                

binary_sensor:
  
  - platform: analog_threshold
    sensor_id: ads2
    id: PIR
    threshold: 1.0
    device_class: motion
    name: "Presença"
 
  - platform: gpio
    pin: 
      number: GPIO3 
      mode:
        pullup: True
        input: True
    id: intp_1
    on_state: 
      then:
        - light.toggle: lmp_1

  - platform: gpio
    pin: 
      number: GPIO1
      mode:
        pullup: True
        input: True
    id: intp_2
    on_state: 
      then:
        - light.toggle: lmp_2


  - platform: gpio
    pin: 
      number: GPIO0 
      mode:
        pullup: True
        input: True
    id: intp_3
    on_state: 
      then:
        - light.toggle: lmp_3


  - platform: gpio
    pin: 
      number: GPIO2  
      mode:
        pullup: True
        input: True
    id: intp_4
    on_state: 
      then:
        - light.toggle: lmp_4



i2c:
  sda: 4
  scl: 5
  scan: true
  id: bus_a

ads1115:
 - address: 0x48
   id: ads1115_48
   continuous_mode: on
   
remote_transmitter:
  pin:
    number: GPIO15
    #inverted: True
  carrier_duty_percent: 50%


sensor:
  - platform: ntc
    id: ntc_
    sensor: resistance_sensor_Temp
    calibration:
        b_constant: 3950
        reference_temperature: 25°C
        reference_resistance: 10kOhm
    name: NTC Temperature
  
  - platform: template
    id: luminosity_sensor
    name: Luminosity Lux
    device_class: illuminance
    unit_of_measurement: "lx"
    update_interval: never
    lambda: |-
     return  (id(ads1).state) * 200;


  - platform: resistance
    id: resistance_sensor_Temp
    sensor: ads0
    reference_voltage: 3.3v
    configuration: UPSTREAM
    resistor: 10.0kOhm
    #name: Resistance Sensor
  
  - platform: resistance
    id: resistance_sensor_Lux
    sensor: ads1
    configuration: UPSTREAM
    reference_voltage: 3.3v
    resistor: 10.0kOhm          
    #name: Resistance Lux

  
  - platform: ads1115
    multiplexer: 'A0_GND'
    gain: 2.048
    id: ads0
    #name: asds 0
    update_interval: never
  
  - platform: ads1115
    multiplexer: 'A1_GND'
    gain: 2.048
    id: ads1
    #name: asds 1
    update_interval: never
  
  - platform: ads1115
    multiplexer: 'A2_GND'
    gain: 2.048
    id: ads2
    #name: asds 2
    update_interval: never


interval:
  interval: 3s
  then: 
    - component.update: ads0
    - delay: 10ms
    - component.update: ads1
    - delay: 10ms        
    - component.update: ads2
    - delay: 10ms      
    - component.update: luminosity_sensor


